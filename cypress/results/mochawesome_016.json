{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-19T08:57:06.829Z",
    "end": "2022-07-19T08:57:08.635Z",
    "duration": 1806,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d5ccffb6-724c-44d3-8b90-07e321f3acf7",
      "title": "",
      "fullFile": "cypress/e2e/webdriver-uni/hanlde-table-data.cy.js",
      "file": "cypress/e2e/webdriver-uni/hanlde-table-data.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a42d99f6-4404-4c48-a97c-82ed0b54db53",
          "title": "Handling data from WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total age of  users",
              "fullTitle": "Handling data from WebdriverUni Calculate total age of  users",
              "timedOut": null,
              "duration": 701,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let userDetail = [];\ncy.get(\"#thumbnail-1 td\").each(($el, index, $list) => {\n  if (Number($el.text())) {\n    userDetail.push(Number($el.text()));\n  }\n}).then(() => {\n  const count = userDetail.reduce((acc, val) => {\n    return acc + val;\n  });\n  cy.log(`Total age count is : ${count}`);\n  expect(count).to.eq(322);\n});",
              "err": {},
              "uuid": "e710fdfc-ed6c-440c-b628-72cb037a573d",
              "parentUUID": "a42d99f6-4404-4c48-a97c-82ed0b54db53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate and assert user age based on last name",
              "fullTitle": "Handling data from WebdriverUni Calculate and assert user age based on last name",
              "timedOut": null,
              "duration": 264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#thumbnail-1 tr td:nth-child(2)\").each(($el, index, $list) => {\n  const text = $el.text();\n  if (text.includes(\"Woods\")) {\n    cy.get($el.next);\n    cy.get(\"#thumbnail-1 tr td:nth-child(2)\").eq(index).next().then(age => {\n      const userAge = age.text();\n      expect(userAge).to.eq(\"80\");\n    }); // expect($el.next.text()).to.equal(80);\n  }\n});",
              "err": {},
              "uuid": "c572079b-44d3-4b6a-8a68-30ff897ddd6d",
              "parentUUID": "a42d99f6-4404-4c48-a97c-82ed0b54db53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e710fdfc-ed6c-440c-b628-72cb037a573d",
            "c572079b-44d3-4b6a-8a68-30ff897ddd6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 965,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}